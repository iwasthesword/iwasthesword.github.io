

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
body
{
   background-color: #707372;
}
  /* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */ #tridiv {
   perspective: 800px;
   position: absolute;
   overflow: hidden;
   width: 100%;
   height: 100%;
   background: transparent;
   font-size: 100%;
 }
 .face {
   box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.4);
 }
 .scene, .shape, .face, .face-wrapper, .cr {
   position: absolute;
   transform-style: preserve-3d;
 }
 .scene {
   width: 80em;
   height: 80em;
   top: 50%;
   left: 50%;
   margin: -40em 0 0 -40em;
 }
 .shape {
   top: 50%;
   left: 50%;
   width: 0;
   height: 0;
   transform-origin: 50%;
 }
 .face, .face-wrapper {
   overflow: hidden;
   transform-origin: 0 0;
   backface-visibility: hidden;
   /* hidden by default, prevent blinking and other weird rendering glitchs */
 }
 .face {
   background-size: 100% 100%!important;
   background-position: center;
 }
 .face-wrapper .face {
   left: 100%;
   width: 100%;
   height: 100%
 }
 .photon-shader {
   position: absolute;
   left: 0;
   top: 0;
   width: 100%;
   height: 100%
 }
 .side {
   left: 50%;
 }
 .cr, .cr .side {
   height: 100%;
 }
 [class*="pyramid"] .face-wrapper .face {
   transform: rotateZ(45deg) translateX(-35.35%) translateY(35.35%);
 }
 [class*="pyramid"] .bk {
   left: 100%;
 }
 [class*="pyramid"] .bm {
   top: 100%;
   transform: rotateX(-90deg) translateY(-50%);
 }
 [class*="pyramid"] .rt, [class*="pyramid"] .lt {
   transform-origin: 50% 0;
 }
 /* .pyr-1 styles */
 .pyr-1 {
   transform:translate3D(0em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
   opacity:1;
   width:10em;
   height:10em;
   margin:-5em 0 0 -5em;
 }
 .pyr-1 .face-wrapper {
   width:10em;
   height:5em;
 }
 .pyr-1 .face-wrapper .face {
   width:10em;
   height:10em;
 }
 .pyr-1 .ft {
   transform:scaleZ(2.23606797749979) scaleY(2.23606797749979) rotateX(26.565051177077994deg);
 }
 .pyr-1 .bk {
   transform:scaleZ(2.23606797749979) scaleY(2.23606797749979) rotateX(-26.565051177077994deg) rotateY(180deg);
 }
 .pyr-1 .rt {
   transform:scaleX(2.23606797749979) scaleY(2.23606797749979) rotateZ(26.565051177077994deg) rotateY(-90deg);
 }
 .pyr-1 .lt {
   transform:scaleX(2.23606797749979) scaleY(2.23606797749979) rotateZ(-26.565051177077994deg) rotateY(90deg);
 }
 .pyr-1 .bm {
   width:10em;
   height:10em;
 }
 .pyr-1 .face {
   background:#008522;
 }

 @keyframes example {
   from {transform: rotateX(-47deg) rotateY(150deg);}
   to {transform: rotateX(314deg) rotateY(-210deg);}
 }
 
 /* The element to apply the animation to */
 .scene {
   animation-name: example;
   animation-duration: 10s;
   animation-iteration-count: infinite;
   animation-timing-function: linear;
 }

